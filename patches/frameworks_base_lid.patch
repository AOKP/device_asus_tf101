diff --git a/services/input/Android.mk b/services/input/Android.mk
index 159800f..f588b8b 100644
--- a/services/input/Android.mk
+++ b/services/input/Android.mk
@@ -44,6 +44,11 @@ LOCAL_MODULE:= libinput
 
 LOCAL_MODULE_TAGS := optional
 
+ifeq ($(TARGET_USES_TF101_LID_HACK),true)
+    $(info WARNING: TF101 lid hack can cause various weird side effects on other devices! Use with caution)
+    LOCAL_CFLAGS += -DTF101_LID_HACK
+endif
+
 include $(BUILD_SHARED_LIBRARY)
 
 
diff --git a/services/input/InputReader.cpp b/services/input/InputReader.cpp
index cd6a2ec..fe68e33 100644
--- a/services/input/InputReader.cpp
+++ b/services/input/InputReader.cpp
@@ -19,7 +19,7 @@
 //#define LOG_NDEBUG 0
 
 // Log debug messages for each raw event received from the EventHub.
-#define DEBUG_RAW_EVENTS 0
+#define DEBUG_RAW_EVENTS 0 
 
 // Log debug messages about touch screen filtering hacks.
 #define DEBUG_HACKS 0
@@ -1829,7 +1829,17 @@ uint32_t SwitchInputMapper::getSources() {
 void SwitchInputMapper::process(const RawEvent* rawEvent) {
     switch (rawEvent->type) {
     case EV_SW:
-        processSwitch(rawEvent->when, rawEvent->code, rawEvent->value);
+#ifdef TF101_LID_HACK
+        if ( (rawEvent->deviceId == 2) && (rawEvent->code == 0) ) {
+            uint32_t newValue = rawEvent->value == 0 ? 1 : 0;
+            ALOGD("Flipping TF101 lid event! New code = %d", newValue);
+            processSwitch(rawEvent->when, rawEvent->code, newValue);
+        } else {
+            processSwitch(rawEvent->when, rawEvent->code, rawEvent->value);
+        }
+#else
+            processSwitch(rawEvent->when, rawEvent->code, rawEvent->value);
+#endif
         break;
     }
 }
@@ -1840,7 +1850,16 @@ void SwitchInputMapper::processSwitch(nsecs_t when, int32_t switchCode, int32_t
 }
 
 int32_t SwitchInputMapper::getSwitchState(uint32_t sourceMask, int32_t switchCode) {
-    return getEventHub()->getSwitchState(getDeviceId(), switchCode);
+    int32_t oldCode = getEventHub()->getSwitchState(getDeviceId(), switchCode);
+#ifdef TF101_LID_HACK
+    if (switchCode == SW_LID) {
+        return oldCode == 0 ? 1 : 0;
+    } else {
+        return oldCode;
+    }
+#else
+    return oldCode;
+#endif
 }
 
 
